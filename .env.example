# ==============================================================================
# HYDRA - DISTRIBUTED AI CODE SYNTHESIS PLATFORM
# Environment Configuration
# ==============================================================================
# Copy this file to .env and customize for your setup
# Documentation: See README.md and docs/ for detailed explanations

# ==============================================================================
# DATABASE CONFIGURATION
# ==============================================================================
# PostgreSQL (optional - for persistent long-term storage)
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_USER=hydra
POSTGRES_PASSWORD=your_password
POSTGRES_DB=hydra_db

# Redis (optional - for hot caching and pub/sub)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0

# SQLite (fallback if PostgreSQL unavailable)
SQLITE_PATH=./data/hydra.db

# ChromaDB (vector embeddings for semantic search)
CHROMA_PATH=./data/chroma

# ==============================================================================
# OLLAMA CONFIGURATION
# ==============================================================================
# Primary Ollama host (local by default)
OLLAMA_HOST=http://localhost:11434

# ==============================================================================
# SOLLOL DISTRIBUTED INFERENCE CONFIGURATION
# ==============================================================================
# SOLLOL provides automatic node discovery and intelligent routing across
# multiple Ollama instances on your network.

# Application identification
HYDRA_APP_NAME=Hydra-UI
SOLLOL_REGISTER_APP=true

# --- Node Discovery ---
# Enable automatic discovery of Ollama nodes on the network
SOLLOL_DISCOVERY_ENABLED=true

# Discovery timeout in seconds (how long to wait for node responses)
SOLLOL_DISCOVERY_TIMEOUT=10

# Enable comprehensive network scanning (slower but finds more nodes)
SOLLOL_SCAN_NETWORK=true

# Health check interval in seconds (how often to check node health)
SOLLOL_HEALTH_CHECK_INTERVAL=120

# --- Resource Monitoring ---
# Enable GPU VRAM monitoring for resource-aware routing
SOLLOL_VRAM_MONITORING=true

# --- Dashboard & Observability ---
# Enable SOLLOL Unified Dashboard for real-time monitoring
SOLLOL_DASHBOARD_ENABLED=true

# Dashboard port (accessible at http://localhost:DASHBOARD_PORT)
SOLLOL_DASHBOARD_PORT=8080

# --- Routing Strategy ---
# Default routing mode: fast|reliable|async
# - fast: GPU-first, lowest latency (<2s), user-facing tasks
# - reliable: Stability over speed, 99%+ uptime, production code
# - async: CPU-preferred, resource-efficient, background tasks
SOLLOL_DEFAULT_ROUTING_MODE=fast

# --- Logging ---
# SOLLOL logging level (DEBUG, INFO, WARNING, ERROR)
SOLLOL_LOG_LEVEL=INFO

# --- Manual Node Configuration (Optional) ---
# SOLLOL automatically discovers nodes, but you can manually specify additional
# nodes that auto-discovery might miss.
# Format: comma-separated list of host:port
# Example: SOLLOL_MANUAL_NODES=192.168.1.100:11434,192.168.1.101:11434
# SOLLOL_MANUAL_NODES=

# ==============================================================================
# MODEL CONFIGURATION
# ==============================================================================
# These environment variables override config/models.yaml defaults.
# Models are tried in order until success.

# --- Orchestrator Models ---
# Light model for quick analysis and task classification (~1-2s)
HYDRA_LIGHT_MODEL=qwen3:1.7b

# Heavy model for complex task decomposition and planning (~3-5s)
HYDRA_HEAVY_MODEL=qwen3:14b

# --- Code Generation Models ---
# Primary code synthesis models (comma-separated, tried in order)
# Updated to use models available on both nodes
HYDRA_CODE_MODELS=qwen2.5-coder:7b,deepseek-coder:latest,codellama:latest,qwen2.5-coder:3b

# --- Specialized Models ---
# Mathematical computations and numerical reasoning
HYDRA_MATH_MODEL=qwen3:14b

# Advanced reasoning for complex problems (QwQ or similar)
HYDRA_REASONING_MODEL=qwen3:14b

# General-purpose models (comma-separated)
HYDRA_GENERAL_MODELS=llama3.2:latest,mistral:latest,qwen3:14b,phi3:latest

# Embedding model for vector search and semantic similarity
HYDRA_EMBEDDING_MODEL=mxbai-embed-large

# JSON function calling and structured output
HYDRA_JSON_MODEL=llama3.2:latest

# ==============================================================================
# REASONING ENGINE CONFIGURATION (Hidden Superpower #1)
# ==============================================================================
# Claude-style reasoning with multiple thinking strategies.
# Disabled by default - enable for higher quality at the cost of speed.

# Enable reasoning engine (set to 'true' to activate)
HYDRA_USE_REASONING_MODEL=false

# Reasoning depth mode: auto|fast|standard|extended|deep
# - auto: Automatically select based on task complexity (recommended)
# - fast: Direct response, no thinking (~1-2s)
# - standard: Chain-of-thought reasoning (~3-5s)
# - extended: Deep reasoning with specialized model (~10-30s)
# - deep: Maximum thinking budget, multi-pass critique (~30-60s+)
HYDRA_REASONING_MODE=auto

# Thinking strategy: cot|tot|critique|refine
# - cot (Chain of Thought): Step-by-step linear reasoning
# - tot (Tree of Thought): Explore multiple solution paths simultaneously
# - critique (Self-Critique): Generate solution then critique and improve
# - refine (Iterative Refinement): Multiple improvement passes
HYDRA_THINKING_STYLE=cot

# --- Token Budgets ---
# Maximum tokens for standard reasoning (chain-of-thought)
HYDRA_MAX_THINKING_TOKENS=8000

# Maximum tokens for deep thinking mode (extended reasoning)
HYDRA_DEEP_THINKING_TOKENS=32000

# Number of self-critique iterations (standard mode)
HYDRA_MAX_CRITIQUE_ITERATIONS=2

# Number of critique passes in deep thinking mode
HYDRA_DEEP_THINKING_ITERATIONS=3

# --- Display Options ---
# Show <thinking> tags in responses (like Claude)
HYDRA_SHOW_THINKING=true

# --- Auto-Trigger ---
# Complexity threshold (1-10) that auto-triggers deep thinking
# Set to 10+ to disable auto-triggering
HYDRA_DEEP_THINKING_THRESHOLD=8.0

# ==============================================================================
# GENERATION PARAMETERS
# ==============================================================================
# Control model behavior and output quality

# Randomness/creativity (0.0 = deterministic, 2.0 = very creative)
HYDRA_TEMPERATURE=0.7
HYDRA_DEFAULT_TEMPERATURE=0.7

# Nucleus sampling threshold (0.0-1.0, higher = more diverse)
HYDRA_TOP_P=0.95
HYDRA_DEFAULT_TOP_P=0.95

# Repetition penalty (1.0 = no penalty, higher = less repetition)
HYDRA_REPEAT_PENALTY=1.1
HYDRA_DEFAULT_REPEAT_PENALTY=1.1

# Maximum response length in tokens
HYDRA_MAX_TOKENS=8192
HYDRA_DEFAULT_MAX_TOKENS=8192

# Context window size (how much history to include)
HYDRA_CONTEXT_LENGTH=4096

# ==============================================================================
# AUTONOMOUS AGENT CONFIGURATION (Hidden Superpower #2)
# ==============================================================================
# Claude Code-style autonomous agent for iterative problem solving.
# Controlled via UI checkbox - these settings tune behavior.

# Maximum iterations before agent gives up
HYDRA_MAX_AGENT_ITERATIONS=10

# Timeout per iteration in seconds
HYDRA_AGENT_ITERATION_TIMEOUT=120

# Enable verbose logging of agent decision-making
HYDRA_AGENT_VERBOSE=false

# ==============================================================================
# CODE SYNTHESIS & CONSENSUS (Hidden Superpower #3)
# ==============================================================================
# Multi-model consensus voting for highest quality code generation.
# Controlled via UI checkbox.

# Number of models to query in parallel for consensus
HYDRA_CONSENSUS_MODEL_COUNT=3

# Minimum similarity threshold for grouping (0.0-1.0)
HYDRA_CONSENSUS_SIMILARITY_THRESHOLD=0.7

# Enable consensus mode by default (false = opt-in via UI)
HYDRA_CONSENSUS_DEFAULT=false

# ==============================================================================
# TOOL EXECUTION & APPROVAL SYSTEM
# ==============================================================================
# 3-tier approval system: SAFE (auto), REQUIRES_APPROVAL, CRITICAL (mandatory)

# Auto-approve READ operations (list_directory, read_file, etc)
HYDRA_AUTO_APPROVE_READS=true

# Auto-approve SAFE Python execution (no file I/O, network, etc)
HYDRA_AUTO_APPROVE_SAFE_PYTHON=true

# Session limit for repeated approvals (prevents spam)
HYDRA_APPROVAL_SESSION_LIMIT=5

# Enable audit logging of all tool executions
HYDRA_AUDIT_TOOL_EXECUTION=true

# ==============================================================================
# GIT INTEGRATION (Hidden Superpower #4)
# ==============================================================================
# Automatic git tracking for all file operations

# Enable git integration for file edits
HYDRA_GIT_ENABLED=true

# Auto-create feature branches for major changes
HYDRA_GIT_AUTO_BRANCH=true

# Auto-commit after successful tool executions
HYDRA_GIT_AUTO_COMMIT=true

# Git user for auto-commits
HYDRA_GIT_USER_NAME=Hydra
HYDRA_GIT_USER_EMAIL=hydra@localhost

# ==============================================================================
# MEMORY MANAGEMENT (Hidden Superpower #5)
# ==============================================================================
# Automatic model lifecycle management and OOM prevention

# Enable proactive model unloading to prevent OOM
HYDRA_MEMORY_MANAGEMENT_ENABLED=true

# VRAM threshold (%) to trigger model unloading
HYDRA_VRAM_THRESHOLD=90

# Time (seconds) before unloading idle models
HYDRA_IDLE_MODEL_TIMEOUT=300

# Enable automatic GPU->CPU fallback on OOM
HYDRA_GPU_CPU_FALLBACK=true

# ==============================================================================
# USER PREFERENCES (Hidden Superpower #6)
# ==============================================================================
# Persistent user settings cached locally

# Enable user preferences system
HYDRA_USER_PREFERENCES_ENABLED=true

# Preferences file location
HYDRA_PREFERENCES_PATH=~/.hydra/user_preferences.json

# Auto-save preferences on change
HYDRA_AUTO_SAVE_PREFERENCES=true

# ==============================================================================
# CODE FORMATTING (Hidden Superpower #7)
# ==============================================================================
# Automatic code formatting with Black, autopep8, prettier

# Enable auto-formatting of generated code
HYDRA_AUTO_FORMAT_CODE=true

# Python formatter: black|autopep8|none
HYDRA_PYTHON_FORMATTER=black

# JavaScript/TypeScript formatter: prettier|none
HYDRA_JS_FORMATTER=prettier

# Format on every response (false = only on request)
HYDRA_FORMAT_ON_GENERATE=true

# ==============================================================================
# WORKFLOW PIPELINE (Hidden Superpower #8)
# ==============================================================================
# Prefect-based DAG execution for complex multi-step tasks

# Enable workflow pipeline orchestration
HYDRA_WORKFLOW_ENABLED=false

# Prefect API endpoint (if using Prefect Cloud)
# PREFECT_API_URL=https://api.prefect.cloud

# Enable workflow caching
HYDRA_WORKFLOW_CACHE_ENABLED=true

# ==============================================================================
# RAY & DASK DISTRIBUTED COMPUTING
# ==============================================================================
# Distributed task processing for parallel workloads

# Enable Ray for distributed processing
HYDRA_RAY_ENABLED=false

# Ray dashboard port (if enabled)
RAY_DASHBOARD_PORT=8265

# Enable Dask for distributed processing
HYDRA_DASK_ENABLED=false

# Dask scheduler address (if using external cluster)
# DASK_SCHEDULER_ADDRESS=tcp://localhost:8786

# ==============================================================================
# PERFORMANCE & OPTIMIZATION
# ==============================================================================

# Enable response streaming (real-time token-by-token)
HYDRA_STREAMING_ENABLED=true

# Chunk size for streaming responses (characters)
HYDRA_STREAMING_CHUNK_SIZE=128

# Enable request queuing for rate limiting
HYDRA_REQUEST_QUEUE_ENABLED=true

# Maximum concurrent requests per node
HYDRA_MAX_CONCURRENT_REQUESTS=5

# ==============================================================================
# LOGGING & DEBUGGING
# ==============================================================================

# Global log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO
HYDRA_LOG_LEVEL=INFO

# Enable verbose orchestration logging
HYDRA_ORCHESTRATION_VERBOSE=false

# Enable tool execution logging
HYDRA_TOOL_LOGGING=true

# Log file location
HYDRA_LOG_FILE=./logs/hydra.log

# Enable JSON-formatted structured logging
HYDRA_JSON_LOGGING=false

# ==============================================================================
# SECURITY & PRIVACY
# ==============================================================================

# Enable security audit logging
HYDRA_SECURITY_AUDIT=true

# Audit log file
HYDRA_AUDIT_LOG=./logs/audit.log

# Disable telemetry/analytics (privacy-first)
HYDRA_TELEMETRY_ENABLED=false

# ==============================================================================
# UI/UX CONFIGURATION
# ==============================================================================

# Streamlit server settings
STREAMLIT_SERVER_PORT=8501
STREAMLIT_SERVER_ADDRESS=0.0.0.0

# Enable dark mode by default
HYDRA_DARK_MODE=true

# Default UI checkboxes (comma-separated)
# Options: context,tools,reasoning,autonomous,consensus,artifacts
HYDRA_DEFAULT_ENABLED=context,tools,artifacts

# Maximum file upload size (MB)
HYDRA_MAX_UPLOAD_SIZE=10

# Maximum files per upload
HYDRA_MAX_UPLOAD_FILES=20

# Maximum total lines of code per upload
HYDRA_MAX_UPLOAD_LINES=20000

# ==============================================================================
# ADVANCED FEATURES (Hidden Superpowers)
# ==============================================================================

# Complexity analysis thresholds
HYDRA_COMPLEXITY_LOW_THRESHOLD=3.0
HYDRA_COMPLEXITY_MEDIUM_THRESHOLD=6.0
HYDRA_COMPLEXITY_HIGH_THRESHOLD=8.0

# Task decomposition settings
HYDRA_MAX_SUBTASKS=10
HYDRA_DECOMPOSITION_ENABLED=true

# JSON pipeline validation
HYDRA_JSON_VALIDATION_STRICT=true
HYDRA_JSON_SCHEMA_CACHE=true

# Code synthesis settings
HYDRA_SYNTHESIS_TIMEOUT=60
HYDRA_SYNTHESIS_MAX_MODELS=5

# ==============================================================================
# EXPERIMENTAL FEATURES (Use at your own risk)
# ==============================================================================

# Enable experimental features (may be unstable)
HYDRA_EXPERIMENTAL_FEATURES=false

# Enable multi-modal input (images, audio)
HYDRA_MULTIMODAL_ENABLED=false

# Enable voice input/output
HYDRA_VOICE_ENABLED=false

# ==============================================================================
# QUICK PRESETS
# ==============================================================================
# Uncomment one of these blocks to quickly configure for common scenarios

# --- PRESET: Maximum Quality (Slow) ---
# HYDRA_USE_REASONING_MODEL=true
# HYDRA_REASONING_MODE=deep
# HYDRA_THINKING_STYLE=tot
# HYDRA_DEEP_THINKING_TOKENS=32000
# HYDRA_DEEP_THINKING_ITERATIONS=3
# SOLLOL_DEFAULT_ROUTING_MODE=reliable

# --- PRESET: Maximum Speed (Lower Quality) ---
# HYDRA_USE_REASONING_MODEL=false
# HYDRA_REASONING_MODE=fast
# HYDRA_MAX_TOKENS=4096
# SOLLOL_DEFAULT_ROUTING_MODE=fast
# HYDRA_LIGHT_MODEL=qwen2.5-coder:3b

# --- PRESET: Balanced (Recommended) ---
# HYDRA_USE_REASONING_MODEL=true
# HYDRA_REASONING_MODE=auto
# HYDRA_THINKING_STYLE=cot
# SOLLOL_DEFAULT_ROUTING_MODE=fast

# ==============================================================================
# END OF CONFIGURATION
# ==============================================================================
# For more information, see:
# - README.md - Complete documentation
# - FEATURE_AUDIT_COMPLETE.md - All features explained
# - docs/ - Detailed guides
